--employees 에서 전체 내용 조회
SELECT
	*
FROM
	EMPLOYEES e ;
	
--first_name, last_name, job_id 조회
SELECT
	FIRST_NAME,
	last_name,
	job_id
FROM
	EMPLOYEES e ;
	
--사원번호가 176인 사람의 LAST_NAME 과 DEPARTMENT_ID 조회
SELECT LAST_NAME, DEPARTMENT_ID  FROM EMPLOYEES WHERE EMPLOYEE_ID=176;

--연봉이 12000 이상 되는 직원들의 LAST_NAME과 SALARY 조회
SELECT LAST_NAME, SALARY FROM EMPLOYEES WHERE SALARY >= 12000;

--연봉이 5000에서 12000의 범위 이외인 사람들의 LAST_NAME과 SALARY 조회
SELECT LAST_NAME, SALARY FROM EMPLOYEES WHERE SALARY>12000 OR SALARY<5000;

--부서번호가 20, 50 부서에서 근무하는 사원들의 LAST_NAME, DEPARTMENT_ID 조회
SELECT LAST_NAME, DEPARTMENT_ID  FROM EMPLOYEES WHERE DEPARTMENT_ID IN(20,50) ;

--부서번호가 20, 50 부서에서 근무하는 사원들의 LAST_NAME, DEPARTMENT_ID 오름차순 조회
SELECT LAST_NAME, DEPARTMENT_ID  FROM EMPLOYEES WHERE DEPARTMENT_ID IN(20,50) ORDER BY LAST_NAME , DEPARTMENT_ID ;

--커미션을 버는 모든 사원들의 LAST_NAME, SALARY, COMMISSION_PCT 조회
SELECT LAST_NAME, SALARY, COMMISSION_PCT FROM EMPLOYEES WHERE COMMISSION_PCT>0 ORDER BY SALARY DESC, COMMISSION_PCT DESC;

--SALARY가 2500,3500,7000이 아니며 JOB_ID이 SA_REP 나 ST_CLERK인 사원 조회
SELECT * FROM EMPLOYEES WHERE SALARY NOT IN(2500,3000,7000) AND JOB_ID IN('SA_REP','ST_CLERK');

--2017-01-01 ~ 2017-12-31 사이에 고용도니 사원들의 LAST_NAME, EMPLOYEE_ID, HIRE_DATE 조회
--HIRE_DATE 내림차순 정렬
SELECT LAST_NAME, EMPLOYEE_ID , HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE >='2017-01-01' AND HIRE_DATE <='2017-12-31' ORDER BY HIRE_DATE DESC; 

--BETWEEN A AND B
--부서번호가 20, 50 부서에서 근무하고, 연봉이 5000 ~ 12000 사이인 사원들의 LAST_NAME, SALARY 조회
--SALARY 오름차순
SELECT LAST_NAME, SALARY 
FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN(20,50) AND SALARY BETWEEN 5000 AND 12000
ORDER BY SALARY ;


--2017-01-01 ~ 2017-12-31 사이에 고용된 사원들의 LAST_NAME,EMPLOYEE_ID, HIRE_DATE 조회
--HIRE_DATE 내림차순 정렬
SELECT LAST_NAME, EMPLOYEE_ID, HIRE_DATE
FROM EMPLOYEES 
WHERE HIRE_DATE BETWEEN '2017-01-01' AND '2017-12-31' 
ORDER BY HIRE_DATE DESC;

--연봉이 5000에서 12000의 범위 이외인 사람들의 LAST_NAME과 SALARY 조회
SELECT LAST_NAME, SALARY 
FROM EMPLOYEES 
WHERE SALARY NOT BETWEEN 5000 AND 12000;

--LAST_NAME에 u가 포함되는 사람들의 사번, LAST_NAME 조회
SELECT LAST_NAME , EMPLOYEE_ID
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%u%';

--LAST_NAME 의 4번째 문자가 a 인 사원들의 사번, LAST_NAME 조회
SELECT LAST_NAME , EMPLOYEE_ID
FROM EMPLOYEES
WHERE LAST_NAME LIKE '___a%';

--LAST_NAME 에 a 혹은 e 글자가 들어있는 사원들의 사번, LAST_NAME 조회후 LAST_NAMER 오름차순 조회
SELECT LAST_NAME , EMPLOYEE_ID
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%a%' OR LAST_NAME LIKE '%e%' 
ORDER BY LAST_NAME ;

--LAST_NAME 에 a 와 e 글자가 들어있는 사원들의 사번, LAST_NAME 조회후 LAST_NAME 오름차순 조회
SELECT LAST_NAME , EMPLOYEE_ID
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%a%e%' or LAST_NAME LIKE '%e%a%' 
ORDER BY LAST_NAME ASC ;

--매니저가 없는 사람들의 LAST_NAME JOB_ID 조회
SELECT LAST_NAME , JOB_ID 
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

--ST_CLERK인 JOB_ID를 가진 사원이 없는 부서 ID 조회(단, 부서번호가 NULL인 사원 제외)
SELECT DISTINCT DEPARTMENT_ID 
FROM EMPLOYEES
WHERE JOB_ID != 'ST_CLERK' AND DEPARTMENT_ID IS NOT NULL;

--COMMISSION_PCT가 NULL 이 아닌 사원들 중에서 COMMISSION = SALARY * COMMISSION_PCT를 구하여 
--EMPLOYEE_ID, FIRST_NAME, JOB_ID를 조회
SELECT  EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY * COMMISSION_PCT COMMISSION
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;

--NULL * 숫자 = NULL
SELECT  EMPLOYEE_ID, FIRST_NAME, JOB_ID,COMMISSION_PCT ,SALARY , SALARY * COMMISSION_PCT COMMISSION
FROM EMPLOYEES;

--FIRST_NAME이 'Curtis'인 사원의 FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, JOB_ID 를 조회한다
--단, JOB_ID 결과는 소문자로 출력한다
SELECT FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER, LOWER(JOB_ID) 
FROM EMPLOYEES e 
WHERE FIRST_NAME='Curtis';

--부서번호가 60,70,80,90 인 사원들의 EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, JOB_ID 조회
--단 JOB_ID가 IT_PROG인 사원의 경우 프로그래머로 변경하여 출력한다.
SELECT EMPLOYEE_ID , FIRST_NAME , HIRE_DATE , REPLACE(JOB_ID,'IT_PROG','프로그래머' ) 
FROM EMPLOYEES e 
WHERE DEPARTMENT_ID IN (60,70,80,90); 

--JOB_ID가 AD_PRES, PU_CLERK인 사원들의 EMPLOYEE_ID, FIRST_NAME, JOB_ID 조회
--단, 사원명은 FIRST_NAME 과 LAST_NAME을 공백을 포함하여 연결
--'ABC' 'DEF' => 'ABC DEF'
SELECT EMPLOYEE_ID , FIRST_NAME || ' '|| LAST_NAME AS NAME  , JOB_ID
FROM EMPLOYEES e 
WHERE JOB_ID IN('AD_PRES','PU_CLERK');



























